// Copyright 2021 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.api.v2alpha;

import "google/api/resource.proto";
import "wfa/measurement/api/v2alpha/account.proto";

option java_package = "org.wfanet.measurement.api.v2alpha";
option java_multiple_files = true;
option java_outer_classname = "AccountsServiceProto";

// Service for interacting with `Account` resources.
service Accounts {
  // Creates (registers) an `Account`.
  //
  // The `creator` will be derived from the authenticated caller. Results in
  // PERMISSION_DENIED if the authenticated caller does not own the
  // `owned_measurement_consumer` in `activation_params`.
  //
  // Returns the `FULL` view of the created `Account`.
  rpc CreateAccount(CreateAccountRequest) returns (Account) {}

  // Activates an account by transitioning its `account_state` to `ACTIVATED`.
  //
  // The `identity` will be derived from the authenticated caller.
  rpc ActivateAccount(ActivateAccountRequest) returns (Account) {}

  // Replaces the `identity` of an `Account`.
  //
  // Results in PERMISSION_DENIED if the authenticated caller does not match the
  // current `identity`.
  rpc ReplaceAccountIdentity(ReplaceAccountIdentityRequest) returns (Account) {}

  // Logs the user in.
  rpc LogIn(LogInRequest) returns (LogInResponse) {}

  // Exchanges a login token for a bearer token.
  rpc ExchangeLoginToken(ExchangeLoginTokenRequest)
      returns (ExchangeLoginTokenResponse) {}
}

// Request message for `CreateAccount` method.
message CreateAccountRequest {
  // The `Account` to create. Required. The `name` field will be ignored, and
  // the system will assign an ID.
  Account account = 1;
}

// Request message for `ActivateAccount` method.
message ActivateAccountRequest {
  // Resource name. Required.
  string name = 1
      [(google.api.resource_reference).type = "halo.wfanet.org/Account"];

  // Activation token. Required.
  string activation_token = 2;
}

// Request message for `ReplaceAccountIdentity` method.
message ReplaceAccountIdentityRequest {
  // Resource name. Required.
  string name = 1
      [(google.api.resource_reference).type = "halo.wfanet.org/Account"];

  message OpenIdConnectCredentials {
    // Encoded JSON Web Token (JWT). Required.
    string identity_bearer_token = 1;
  }

  message UsernameCredentials {
    string username = 1;
    string password = 2;
  }

  // Replacement credentials for an identity. Required.
  oneof replacement_credentials {
    // Replacement credentials for an `OpenIdConnectIdentity`.
    OpenIdConnectCredentials open_id = 2;
    // Replacement credentials for a `UsernameIdentity`.
    UsernameCredentials username = 3;
  }
}

message LogInRequest {}

message LogInResponse {
  // Single-use token that can be exchanged for a bearer JWT.
  string login_token = 1;

  // URI to navigate to in user agent for completing login process.
  string authorization_uri = 2;
}

message ExchangeLoginTokenRequest {
  // Single-use token that can be exchanged for a bearer JWT.
  bytes login_token = 1;
}

message ExchangeLoginTokenResponse {
  // Encoded JSON Web Token that can be used as a bearer token for call
  // authentication.
  string bearer_token = 1;
}
