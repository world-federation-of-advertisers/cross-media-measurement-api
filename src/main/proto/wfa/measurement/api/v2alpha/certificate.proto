// Copyright 2021 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.api.v2alpha;

import "google/api/resource.proto";

option java_package = "org.wfanet.measurement.api.v2alpha";
option java_multiple_files = true;
option java_outer_classname = "CertificateProto";

// Resource representing an X.509 certificate.
message Certificate {
  option (google.api.resource) = {
    type: "halo.wfanet.org/Certificate"
    pattern: "dataProviders/{data_provider}/certificates/{certificate}"
    pattern: "measurementConsumers/{measurement_consumer}/certificates/{certificate}"
    pattern: "duchies/{duchy}/certificates/{certificate}"
  };

  // Resource name.
  //
  // The resource ID alias "preferred" may be used in place of the `Certificate`
  // ID to refer to the *preferred* `Certificate`.
  string name = 1;

  // X.509 certificate in DER format. Required. Immutable.
  bytes x509_der = 2;

  // RFC 5280 revocation state.
  //
  // This is *not* a resource state as defined by https://google.aip.dev/216.
  enum RevocationState {
    REVOCATION_STATE_UNSPECIFIED = 0;

    // Certificate is on hold and therefore invalid, possibly temporarily.
    HOLD = 1;

    // Certificate has been revoked. Terminal state.
    REVOKED = 2;
  }
  // Revocation state of the certificate reported by an API caller. Output-only.
  //
  // If specified, it means that the certificate is not currently valid.
  //
  // Note that this is not guaranteed to reflect the actual revocation state
  // determined by the issuing certificate authority.
  RevocationState revocation_state = 3;
}
