// Copyright 2021 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.api.v2alpha;

import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/any.proto";
import "google/type/interval.proto";
import "wfa/measurement/api/v2alpha/crypto.proto";
import "wfa/measurement/api/v2alpha/event_group_metadata.proto";
import "wfa/measurement/api/v2alpha/media_type.proto";

option java_package = "org.wfanet.measurement.api.v2alpha";
option java_multiple_files = true;
option java_outer_classname = "EventGroupProto";
option go_package = "github.com/world-federation-of-advertisers/cross-media-measurement/cmms/apiv2alpha/cmmspb";

// A grouping of events defined by a `DataProvider`. For example, a single
// campaign or creative defined in a publisher's ad system.
message EventGroup {
  option (google.api.resource) = {
    type: "halo.wfanet.org/EventGroup"
    pattern: "dataProviders/{data_provider}/eventGroups/{event_group}"
    pattern: "measurementConsumers/{measurement_consumer}/eventGroups/{event_group}"
    singular: "eventGroup"
    plural: "eventGroups"
  };

  reserved 3;

  // Resource name.
  //
  // Canonical format: dataProviders/{data_provider}/eventGroups/{event_group}
  string name = 1 [(google.api.field_behavior) = IDENTIFIER];

  // Resource name of the `MeasurementConsumer` associated with this
  // `EventGroup`.
  string measurement_consumer = 2 [
    (google.api.resource_reference).type =
        "halo.wfanet.org/MeasurementConsumer",
    (google.api.field_behavior) = REQUIRED,
    (google.api.field_behavior) = IMMUTABLE
  ];

  // ID referencing the `EventGroup` in an external system, provided by the
  // `DataProvider`. This value should be used to help the `DataProvider`
  // synchronize their metadata with the EventGroupsService. See
  // `EventGroupMetadata` which provides a set of identifiers with better
  // defined semantics.
  string event_group_reference_id = 5;

  // The MediaTypes of the events entailed by this `EventGroup`
  //
  // These are used to derive the `EventTemplate`s that the events associated
  // with this `EventGroup` conform to.
  //
  // TODO(@kungfucraig): Make this REQUIRED once it has been adopted, and no
  // sooner than the Halo CMM 0.6 release.
  repeated MediaType media_types = 13;

  // Metadata that describes the events entailed by the EventGroup.
  //
  // TODO(@kungfucraig): Make this REQUIRED once it has been adopted, and no
  // sooner than the Halo CMM 0.6 release.
  EventGroupMetadata event_group_metadata = 14;

  // Deprecated: This field was never adopted and is no longer used.
  // Instead, per `ModelLine` `EventGroup` data availability will be inferred by
  // intersecting the `DataProvider` per `ModelLine` data availability
  // with the `EventGroup` `data_availability_interval`
  //
  // The set of VID model lines used to label events in this `EventGroup`.
  repeated string vid_model_lines = 6 [
    (google.api.resource_reference).type = "halo.wfanet.org/ModelLine",
    (google.api.field_behavior) = UNORDERED_LIST,
    deprecated = true
  ];

  // Template for an event message.
  message EventTemplate {
    // The type of the Event Template. A fully-qualified protobuf message type.
    string type = 1 [(google.api.field_behavior) = REQUIRED];
  }

  // The `EventTemplate`s that events associated with this `EventGroup` conform
  // to.
  //
  // In a future release, this field will be deprecated in favor of setting
  // `media_types`, but should continue to be set alongside `media_types` until
  // it is formally marked deprecated. It will be deprecated no sooner than the
  // Halo CMM 0.6 release.
  repeated EventTemplate event_templates = 7
      [(google.api.field_behavior) = UNORDERED_LIST];

  // Wrapper for per-EDP EventGroup metadata.
  message Metadata {
    // The resource name of the metadata descriptor.
    string event_group_metadata_descriptor = 1 [
      (google.api.resource_reference).type =
          "halo.wfanet.org/EventGroupMetadataDescriptor",
      (google.api.field_behavior) = REQUIRED
    ];

    // A message of a type described by the descriptor along with its type URL,
    // encoded as an `Any` message.
    //
    // See https://protobuf.dev/programming-guides/techniques/#self-description
    google.protobuf.Any metadata = 2 [(google.api.field_behavior) = REQUIRED];
  }

  // `Metadata` encrypted using the `measurement_consumer_public_key` as the
  // recipient public key.
  //
  // The version of the `Metadata` message type must match the API version used
  // to last update this resource.
  //
  // In a future release this field will be deprecated and replaced by
  // `event_group_metadata` but until this field is marked deprecated it should
  // continue to be written alongside `event_group_metadata`. It will be
  // deprecated no sooner than the Halo CMM 0.6 release.
  EncryptedMessage encrypted_metadata = 10;

  // Encrypted serialized `Metadata`.
  //
  // Deprecated: Use `encrypted_metadata` instead.
  bytes serialized_encrypted_metadata = 8 [deprecated = true];

  // Pre-shared packed `EncryptionPublicKey` Must be set if `encrypted_metadata`
  // is set.
  //
  // The version of the `EncryptionPublicKey` message must match the API version
  // used to last update this resource.
  //
  // This field will be deprcated in a future release. See `encrypted_metadata`
  // for additional information.
  google.protobuf.Any measurement_consumer_public_key = 12;

  // Signed pre-shared packed `EncryptionPublicKey`.
  //
  // Deprecated: There may not be a signature available. Use
  // `measurement_consumer_public_key` instead.
  SignedMessage signed_measurement_consumer_public_key = 4 [deprecated = true];

  // Possible states of Event Group.
  enum State {
    // The default value if state is omitted. Should not be used
    STATE_UNSPECIFIED = 0;
    // The Event Group has been created
    ACTIVE = 1;
    // The Event Group has been deleted. An Event Group in a DELETED state will
    // have all mutable optional fields cleared. This state is terminal.
    DELETED = 2;
  }
  // Event Group state.
  State state = 9 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Interval for when events for this `EventGroup` are available.
  //
  // For an Ad Campaign these are the start and end dates of the campaign.
  //
  // Events are available in the range specified here, but are only guaranteed
  // to be available for reporting for a paticular `ModelLine` where this range
  // intersects with the `data_availability_intervals` set forth on the
  // `DataProvider` for the particular `ModelLine`
  //
  // TODO(@kungfucraig): Make this REQUIRED once it has been adopted. This will
  // happen no sooner than the 0.6 relesae.
  google.type.Interval data_availability_interval = 11;
}
