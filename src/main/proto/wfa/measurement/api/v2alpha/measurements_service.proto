// Copyright 2021 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.api.v2alpha;

import "google/api/resource.proto";
import "wfa/measurement/api/v2alpha/measurement.proto";

option java_package = "org.wfanet.measurement.api.v2alpha";
option java_multiple_files = true;
option java_outer_classname = "MeasurementsServiceProto";

// Service for interacting with `Measurement` resources.
service Measurements {
  // Returns the `Measurement` with the specified resource key.
  rpc GetMeasurement(GetMeasurementRequest) returns (Measurement) {}

  // Creates (registers) a `Measurement`.
  rpc CreateMeasurement(CreateMeasurementRequest) returns (Measurement) {}

  // Lists `Measurement`s for the parent `MeasurementConsumer`.
  rpc ListMeasurements(ListMeasurementsRequest)
      returns (ListMeasurementsResponse) {}
}

// Request message for `GetMeasurement` method.
message GetMeasurementRequest {
  // Resource name. Required.
  string name = 1
      [(google.api.resource_reference).type = "halo.wfanet.org/Measurement"];
}

// Request message for `CreateMeasurement` method.
message CreateMeasurementRequest {
  // The `Measurement` to create. Required. The `key` field will be
  // ignored, and the system will assign an ID.
  Measurement measurement = 1;
}

// Request message for `ListMeasurements` method.
message ListMeasurementsRequest {
  // Resource name of the parent `MeasurementConsumer`. Required.
  string parent = 1 [(google.api.resource_reference).type =
                         "halo.wfanet.org/MeasurementConsumer"];

  // The maximum number of `Measurement`s to return.
  // The service may return fewer than this value.
  // If unspecified, at most 50 `Measurement`s will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2;

  // A page token, received from a previous `ListMeasurementsRequest` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListMeasurementsRequest`
  // must match the call that provided the page token.
  string page_token = 3;

  // Filter criteria. Repeated fields are treated as logical ORs, and multiple
  // fields specified as logical ANDs.
  message Filter {
    repeated Measurement.State states = 1;
  }
  Filter filter = 4;
}

message ListMeasurementsResponse {
  // List of `Measurement`s that has all of the tags in the
  // ListMeasurementsRequest
  repeated Measurement measurement = 1;
  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}
