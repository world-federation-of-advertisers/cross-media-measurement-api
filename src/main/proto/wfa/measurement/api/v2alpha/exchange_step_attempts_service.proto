// Copyright 2021 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.api.v2alpha;

import "google/api/resource.proto";
import "google/protobuf/timestamp.proto";
import "wfa/measurement/api/v2alpha/exchange_step_attempt.proto";

option java_package = "org.wfanet.measurement.api.v2alpha";
option java_multiple_files = true;
option java_outer_classname = "ExchangeStepAttemptsServiceProto";

// Service for interacting with `ExchangeStepAttempt` resources.
//
// The only way to create an ExchangeStepAttempt is through the
// /ExchangeSteps.ClaimReadyExchangeStep method.
service ExchangeStepAttempts {
  // Returns the `ExchangeStepAttempt` with the specified resource key.
  rpc GetExchangeStepAttempt(GetExchangeStepAttemptRequest)
      returns (ExchangeStepAttempt);

  // Lists `ExchangeStepAttempts`.
  rpc ListExchangeStepAttempts(ListExchangeStepAttemptsRequest)
      returns (ListExchangeStepAttemptsResponse);

  // Adds a log entry to an `ExchangeStepAttempt`.
  rpc AppendLogEntry(AppendLogEntryRequest) returns (ExchangeStepAttempt);

  // Marks an `ExchangeStepAttempt` as finished (either successfully or not).
  //
  // It is an error to have more than one `SUCCEEDED` `ExchangeStepAttempt` for
  // any given `ExchangeStep`.
  rpc FinishExchangeStepAttempt(FinishExchangeStepAttemptRequest)
      returns (ExchangeStepAttempt);
}

// Request message for `GetExchangeStepAttempt` method.
message GetExchangeStepAttemptRequest {
  // Resource name.
  string name = 1 [(google.api.resource_reference).type =
                       "halo.wfanet.org/ExchangeStepAttempt"];
}

// Request message for `ListExchangeStepAttempts` method.
message ListExchangeStepAttemptsRequest {
  // The parent `ExchangeStep`. If blank, `ListExchangeSteps` will consider all
  // ExchangeStepAttempts belonging to the caller.
  string parent = 1
      [(google.api.resource_reference).type = "halo.wfanet.org/Exchange"];

  // The maximum number of `ExchangeStepAttempt`s to return.
  // The service may return fewer than this value.
  // If unspecified, at most 50 `ExchangeStepAttempt`s will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  //
  // Typically, an ExchangeStep will only have 0 or 1 ExchangeStepAttempts, so
  // most of the time this can be omitted and all results will fit in a single
  // response.
  int32 page_size = 2;

  // A page token, received from a previous `ListExchangeStepAttemptsRequest`
  // call. Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to
  // `ListExchangeStepAttemptsRequest` must match the call that provided the
  // page token.
  string page_token = 3;

  // Filter criteria. Repeated fields are treated as logical ORs, and multiple
  // fields specified as logical ANDs.
  message Filter {
    repeated ExchangeStepAttempt.State state = 1;
    google.protobuf.Timestamp created_before = 2;
    google.protobuf.Timestamp created_on_or_after = 3;
  }
  Filter filter = 4;
}

// Response message for `ListExchangeStepAttempts` method.
message ListExchangeStepAttemptsResponse {
  // Page of `ExchangeStepAttempt`s.
  repeated ExchangeStepAttempt exchange_step_attempts = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

// Request message for `AppendLogEntry` method.
message AppendLogEntryRequest {
  // The `ExchangeStepAttempt` to append the entry to. It must be in a valid,
  // non-terminal state.
  string name = 1 [(google.api.resource_reference).type =
                       "halo.wfanet.org/ExchangeStepAttempt"];

  // The messages to append. Do NOT include sensitive information in this field.
  repeated ExchangeStepAttempt.DebugLog log_entries = 2;
}

// Request message for `FinishExchangeStepAttempt` method.
message FinishExchangeStepAttemptRequest {
  // The `ExchangeStep` to finish. It must be in a valid, non-terminal state.
  string name = 1 [(google.api.resource_reference).type =
                       "halo.wfanet.org/ExchangeStepAttempt"];

  // The ultimate state of the `ExchangeStepAttempt`. Must be a terminal state.
  ExchangeStepAttempt.State final_state = 2;

  // Final debug log entries to append concurrently with the state transition.
  repeated ExchangeStepAttempt.DebugLog log_entries = 3;

  // See documentation on `ExchangeStep.shared_inputs`.
  //
  // Contains an entry for each output accessible in the ExchangeStep's
  // `step.shared_output_labels` map. The keys here are values from
  // `shared_output_labels`.
  //
  // This field will be ignored if the `final_state` is `FAILED`.
  map<string, bytes> shared_outputs = 4;
}
