// Copyright 2021 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.api.v2alpha;

import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "wfa/measurement/api/v2alpha/exchange_step_attempt.proto";

option java_package = "org.wfanet.measurement.api.v2alpha";
option java_multiple_files = true;
option java_outer_classname = "ExchangeStepAttemptsServiceProto";

// Service for interacting with `ExchangeStepAttempt` resources.
//
// The only way to create an ExchangeStepAttempt is through the
// /ExchangeSteps.ClaimReadyExchangeStep method.
service ExchangeStepAttempts {
  // Adds a log entry to an `ExchangeStepAttempt`.
  rpc AppendExchangeStepAttemptLogEntry(
      AppendExchangeStepAttemptLogEntryRequest) returns (ExchangeStepAttempt);

  // Marks an `ExchangeStepAttempt` as finished (either successfully or not).
  //
  // It is an error to have more than one `SUCCEEDED` `ExchangeStepAttempt` for
  // any given `ExchangeStep`.
  rpc FinishExchangeStepAttempt(FinishExchangeStepAttemptRequest)
      returns (ExchangeStepAttempt);
}

// Request message for `AppendExchangeStepLogEntry` method.
message AppendExchangeStepAttemptLogEntryRequest {
  // The `ExchangeStepAttempt` to append the entry to. It must be in a valid,
  // non-terminal state.
  string name = 1 [
    (google.api.resource_reference).type =
        "halo.wfanet.org/ExchangeStepAttempt",
    (google.api.field_behavior) = REQUIRED
  ];

  // The messages to append. Do NOT include sensitive information in this field.
  repeated ExchangeStepAttempt.DebugLogEntry log_entries = 2
      [(google.api.field_behavior) = REQUIRED];
}

// Request message for `FinishExchangeStepAttempt` method.
message FinishExchangeStepAttemptRequest {
  // The `ExchangeStep` to finish. It must be in a valid, non-terminal state.
  string name = 1 [
    (google.api.resource_reference).type =
        "halo.wfanet.org/ExchangeStepAttempt",
    (google.api.field_behavior) = REQUIRED
  ];

  // The ultimate state of the `ExchangeStepAttempt`. Must be a terminal state.
  // (-- api-linter: core::0216::state-field-output-only=disabled
  //     aip.dev/not-precedent: This is not a resource state field. --)
  ExchangeStepAttempt.State final_state = 2
      [(google.api.field_behavior) = REQUIRED];

  // Final debug log entries to append concurrently with the state transition.
  repeated ExchangeStepAttempt.DebugLogEntry log_entries = 3;
}
