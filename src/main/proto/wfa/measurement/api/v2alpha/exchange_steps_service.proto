// Copyright 2021 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.api.v2alpha;

import "wfa/measurement/api/v2alpha/data_provider.proto";
import "wfa/measurement/api/v2alpha/exchange_step.proto";
import "wfa/measurement/api/v2alpha/model_provider.proto";

option java_package = "org.wfanet.measurement.api.v2alpha";
option java_multiple_files = true;
option java_outer_classname = "ExchangeStepsServiceProto";

// Service for interacting with `ExchangeStep` resources.
service ExchangeSteps {
  // Returns the `ExchangeStep` with the specified resource key.
  rpc GetExchangeStep(GetExchangeStepRequest) returns (ExchangeStep);

  // Finds ExchangeSteps that are ready to be worked on.
  //
  // This is different from a standard List RPC endpoint because (a) it only
  // includes results in state READY and (b) there are no filters or parent
  // selection. Instead, the "parent" is either the DataProvider or the
  // ModelProvider -- the party to execute the step.
  //
  // This method is focused on the one known use case of listing ExchangeSteps.
  rpc ListReadyExchangeSteps(ListReadyExchangeStepsRequest)
      returns (ListReadyExchangeStepsResponse);
}

// Request message for `GetExchangeStep` method.
message GetExchangeStepRequest {
  // Resource key.
  ExchangeStep.Key key = 1;
}

// Request message for `ListReadyExchangeSteps` method.
message ListReadyExchangeStepsRequest {
  // The maximum number of `ExchangeStep`s to return.
  // The service may return fewer than this value.
  // If unspecified, at most 50 `ExchangeStep`s will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 1;

  // A page token, received from a previous `ListExchangeStepsRequest` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to
  // `ListReadyExchangeStepsRequest` must match the call that provided the page
  // token.
  string page_token = 2;

  // Required. Only includes steps belonging to this party.
  oneof party {
    DataProvider.Key data_provider = 3;
    ModelProvider.Key model_provider = 4;
  }
}

// Response message for `ListReadyExchangeSteps` method.
message ListReadyExchangeStepsResponse {
  // Page of `ExchangeStep`s.
  repeated ExchangeStep exchange_steps = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}