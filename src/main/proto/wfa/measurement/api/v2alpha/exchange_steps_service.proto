// Copyright 2021 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.api.v2alpha;

import "wfa/measurement/api/v2alpha/data_provider.proto";
import "wfa/measurement/api/v2alpha/exchange_step.proto";
import "wfa/measurement/api/v2alpha/exchange_step_attempt.proto";
import "wfa/measurement/api/v2alpha/model_provider.proto";

option java_package = "org.wfanet.measurement.api.v2alpha";
option java_multiple_files = true;
option java_outer_classname = "ExchangeStepsServiceProto";

// Service for interacting with `ExchangeStep` resources.
service ExchangeSteps {
  // Returns the `ExchangeStep` with the specified resource key.
  rpc GetExchangeStep(GetExchangeStepRequest) returns (ExchangeStep);

  // Claims a single ExchangeStep that is ready to be worked on and creates an
  // initial ExchangeStepAttempt for it.
  //
  // If there are no ready ExchangeSteps, this will return an empty response.
  // Since this is expected, normal behavior, it does NOT return a NOT_FOUND
  // error.
  rpc ClaimReadyExchangeStep(ClaimReadyExchangeStepRequest)
      returns (ClaimReadyExchangeStepResponse);
}

// Request message for `GetExchangeStep` method.
message GetExchangeStepRequest {
  // Resource key.
  ExchangeStep.Key key = 1;
}

// Request message for `ClaimReadyExchangeStep` method.
message ClaimReadyExchangeStepRequest {
  // If an `ExchangeStep` is returned, it should be executed by this party.
  // Required.
  oneof party {
    DataProvider.Key data_provider = 1;
    ModelProvider.Key model_provider = 2;
  }
}

// Response message for `ClaimReadyExchangeStep` method.
// If there are no ready `ExchangeSteps`, all fields will be unset.
message ClaimReadyExchangeStepResponse {
  // The `ExchangeStep`.
  ExchangeStep exchange_step = 1;

  // Resource key of a new ExchangeStepAttempt for `exchange_step`.
  ExchangeStepAttempt.Key exchange_step_attempt = 2;
}