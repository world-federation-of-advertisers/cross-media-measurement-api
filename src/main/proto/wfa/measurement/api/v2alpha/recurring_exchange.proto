// Copyright 2021 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.api.v2alpha;

import "google/api/resource.proto";
import "google/type/date.proto";
import "wfa/measurement/api/v2alpha/exchange_workflow.proto";

option java_package = "org.wfanet.measurement.api.v2alpha";
option java_multiple_files = true;
option java_outer_classname = "RecurringExchangeProto";

// A Panel Matching exchange that happens between a DataProvider and a
// ModelProvider on some schedule. This is instantiated once per date in the
// schedule via Exchange resources.
message RecurringExchange {
  option (google.api.resource) = {
    type: "halo.wfanet.org/RecurringExchange"
    pattern: "recurringExchanges/{recurring_exchange}"
  };

  // Resource name.
  string name = 1;

  // The ExchangeWorkflow for this recurring exchange. Immutable.
  ExchangeWorkflow exchange_workflow = 2;

  // The DataProvider party.
  string event_data_provider = 4
      [(google.api.resource_reference).type = "halo.wfanet.org/DataProvider"];

  // The ModelProvider party.
  string model_provider = 5
      [(google.api.resource_reference).type = "halo.wfanet.org/ModelProvider"];

  // Whether this exchange is still enabled.
  State state = 6;

  // The date of the next Exchange.
  google.type.Date next_exchange_date = 7;

  enum State {
    STATE_UNSPECIFIED = 0;

    // New Exchanges should be started according to the schedule.
    ACTIVE = 1;

    // New Exchanges will not be created.
    RETIRED = 2;
  }
}
