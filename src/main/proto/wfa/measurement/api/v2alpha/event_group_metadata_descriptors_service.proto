// Copyright 2020 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.api.v2alpha;

import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "wfa/measurement/api/v2alpha/event_group_metadata_descriptor.proto";

option java_package = "org.wfanet.measurement.api.v2alpha";
option java_multiple_files = true;
option java_outer_classname = "EventGroupMetadataDescriptorsServiceProto";

// Service for interacting with `EventGroupMetadataDescriptor` resources.
service EventGroupMetadataDescriptors {
  // Returns the `EventGroupMetadataDescriptor` with the specified resource
  // name.
  rpc GetEventGroupMetadataDescriptor(GetEventGroupMetadataDescriptorRequest)
      returns (EventGroupMetadataDescriptor) {
    option (google.api.method_signature) = "name";
  }

  // Creates (registers) a `EventGroupMetadataDescriptor` defined in the
  // specified `DataProvider`'s system.
  rpc CreateEventGroupMetadataDescriptor(
      CreateEventGroupMetadataDescriptorRequest)
      returns (EventGroupMetadataDescriptor) {
    option (google.api.method_signature) =
        "parent,event_group_metadata_descriptor";
  }

  // Updates an existing `EventGroupMetadataDescriptor`. Results in a
  // `PERMISSION_DENIED` error if the authenticated user does not have access to
  // the `EventGroupMetadataDescriptor`. Results in a `NOT_FOUND` error if the
  // the specified `EventGroupMetadataDescriptor` does not exist.
  // (-- api-linter: core::0134::method-signature=disabled
  //     aip.dev/not-precedent: Partial update not supported. --)
  rpc UpdateEventGroupMetadataDescriptor(
      UpdateEventGroupMetadataDescriptorRequest)
      returns (EventGroupMetadataDescriptor) {
    option (google.api.method_signature) = "event_group_metadata_descriptor";
  }

  // Batch gets `EventGroupMetadataDescriptors`s. Results in a `NOT_FOUND` error
  // if any of the specified `EventGroupMetadataDescriptor`s does not exist.
  rpc BatchGetEventGroupMetadataDescriptors(
      BatchGetEventGroupMetadataDescriptorsRequest)
      returns (BatchGetEventGroupMetadataDescriptorsResponse) {}

  // Lists `EventGroupMetadataDescriptor`s. Results in a `PERMISSION_DENIED`
  // error if attempting to list `EventGroupMetadataDescriptor`s that the
  // authenticated user does not have access to.
  rpc ListEventGroupMetadataDescriptors(
      ListEventGroupMetadataDescriptorsRequest)
      returns (ListEventGroupMetadataDescriptorsResponse) {
    option (google.api.method_signature) = "parent";
  }
}

// Request message for `GetEventGroupMetadataDescriptor` method.
message GetEventGroupMetadataDescriptorRequest {
  // Resource name.
  string name = 1 [
    (google.api.resource_reference).type =
        "halo.wfanet.org/EventGroupMetadataDescriptor",
    (google.api.field_behavior) = REQUIRED
  ];
}

// Request message for `CreateEventGroupMetadataDescriptor` method.
message CreateEventGroupMetadataDescriptorRequest {
  // Resource name of the parent `DataProvider`.
  string parent = 1 [
    (google.api.resource_reference).type = "halo.wfanet.org/DataProvider",
    (google.api.field_behavior) = REQUIRED
  ];

  // The `EventGroupMetadataDescriptor` to create.
  //
  // The `name` field will be ignored, and the system will assign an ID.
  EventGroupMetadataDescriptor event_group_metadata_descriptor = 2
      [(google.api.field_behavior) = REQUIRED];

  // Unique identifier for this request.
  //
  // Using the protobuf type URL is recommended.
  //
  // If specified, the request will be idempotent. See
  // https://google.aip.dev/155.
  string request_id = 3;
}

// Request message for `UpdateEventGroup` method.
//
// (-- api-linter: core::0134::request-mask-required=disabled
//     aip.dev/not-precedent: Partial update not supported. --)
message UpdateEventGroupMetadataDescriptorRequest {
  // The `EventGroupMetadataDescriptor` to update.
  EventGroupMetadataDescriptor event_group_metadata_descriptor = 1
      [(google.api.field_behavior) = REQUIRED];
}

// Request message for `BatchGetEventGroupMetadataDescriptors` method.
message BatchGetEventGroupMetadataDescriptorsRequest {
  // Resource name of the parent `DataProvider`.
  string parent = 1 [
    (google.api.resource_reference).type = "halo.wfanet.org/DataProvider",
    (google.api.field_behavior) = REQUIRED
  ];

  // The resource names of `EventGroupMetadataDescriptor`s to retrieve.
  repeated string names = 2 [
    (google.api.resource_reference).type =
        "halo.wfanet.org/EventGroupMetadataDescriptor",
    (google.api.field_behavior) = REQUIRED
  ];
}

// Response message for `BatchGetEventGroupMetadataDescriptors` method.
message BatchGetEventGroupMetadataDescriptorsResponse {
  // The `EventGroupMetadataDescriptor` resources.
  repeated EventGroupMetadataDescriptor event_group_metadata_descriptors = 1;
}

// Request message for `ListEventGroupMetadataDescriptors` method.
message ListEventGroupMetadataDescriptorsRequest {
  // Resource name of the parent `DataProvider`. The wildcard ID (`-`) may be
  // used in place of the `DataProvider` ID to list across `DataProvider`s.
  string parent = 1 [
    (google.api.resource_reference).type = "halo.wfanet.org/DataProvider",
    (google.api.field_behavior) = REQUIRED
  ];

  // The maximum number of `EventGroupMetadataDescriptor`s to return. The
  // service may return fewer than this value. If unspecified, at most 50
  // `EventGroupMetadataDescriptor`s will be returned. The maximum value is
  // 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2;

  // A token from a previous call, specified to retrieve the next page. See
  // https://aip.dev/158.
  string page_token = 3;
}

// Response message for `ListEventGroupMetadataDescriptors` method.
message ListEventGroupMetadataDescriptorsResponse {
  // The `EventGroupMetadataDescriptor` resources.
  repeated EventGroupMetadataDescriptor event_group_metadata_descriptors = 1;

  // A token that can be specified in a subsequent call to retrieve the next
  // page. See https://aip.dev/158.
  string next_page_token = 2;
}
