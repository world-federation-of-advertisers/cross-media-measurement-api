// Copyright 2021 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.api.v2alpha;

import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/any.proto";
import "google/type/date.proto";

option java_package = "org.wfanet.measurement.api.v2alpha";
option java_multiple_files = true;
option java_outer_classname = "ExchangeStepProto";

// API resource representing an ExchangeWorkflow.Step for a particular Exchange.
message ExchangeStep {
  option (google.api.resource) = {
    type: "halo.wfanet.org/ExchangeStep"
    pattern: "recurringExchanges/{recurring_exchange}/exchanges/{exchange}/steps/{exchange_step}"
    pattern: "dataProviders/{data_provider}/recurringExchanges/{recurring_exchange}/exchanges/{exchange}/steps/{exchange_step}"
    pattern: "modelProviders/{data_provider}/recurringExchanges/{recurring_exchange}/exchanges/{exchange}/steps/{exchange_step}"
    singular: "exchangeStep"
    plural: "exchangeSteps"
  };

  reserved 3;

  // Resource name.
  string name = 1;

  // Denormalized `date` from the parent `Exchange`.
  //
  // Must be a complete date (no field can be unset/zero).
  google.type.Date exchange_date = 4 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (google.api.field_behavior) = IMMUTABLE
  ];

  // Current index of the step inside the serialized_exchange_workflow.
  int32 step_index = 5 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.field_behavior) = IMMUTABLE
  ];

  // The party that executes this step. Required.
  //
  // This must be one of the parties on the ancestor `RecurringExchange`.
  oneof party {
    // Resource name of the `DataProvider` that executes this step.
    string data_provider = 6 [
      (google.api.resource_reference).type = "halo.wfanet.org/DataProvider",
      (google.api.field_behavior) = IMMUTABLE
    ];
    // Resource name of the `ModelProvider` that executes this step.
    string model_provider = 7 [
      (google.api.resource_reference).type = "halo.wfanet.org/ModelProvider",
      (google.api.field_behavior) = IMMUTABLE
    ];
  }

  // Denormalized `exchange_workflow` field from the ancestor
  // `RecurringExchange`.
  google.protobuf.Any exchange_workflow = 8 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (google.api.field_behavior) = IMMUTABLE
  ];

  // State of an `ExchangeStep`.
  enum State {
    // Default value used if the state is omitted.
    STATE_UNSPECIFIED = 0;

    // Some predecessor ExchangeStep is not in state SUCCEEDED.
    BLOCKED = 1;

    // All predecessor ExchangeSteps are in state `SUCCEEDED` and there are no
    // associated ExchangeStepAttempts.
    // (-- api-linter: core::0216::value-synonyms=disabled --)
    READY = 2;

    // All predecessor ExchangeSteps are in state `SUCCEEDED` and there is at
    // least one associated ExchangeStepAttempt and all associated
    // ExchangeStepAttempts are in state `FAILED`.
    READY_FOR_RETRY = 3;

    // All predecessor ExchangeSteps are in state `SUCCEEDED` and an associated
    // ExchangeStepAttempt is in state `ACTIVE`.
    IN_PROGRESS = 4;

    // The step has succeeded. Terminal state. This implies that an associated
    // ExchangeStepAttempt is in state `SUCCEEDED`.
    SUCCEEDED = 5;

    // The step has permanently failed. Terminal state. This implies that an
    // associated ExchangeStepAttempt is in state `FAILED_STEP`.
    FAILED = 6;
  }
  // State of this `ExchangeStep`.
  State state = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
}
