// Copyright 2020 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.api.v2alpha;

import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/type/interval.proto";
import "wfa/measurement/api/v2alpha/crypto.proto";

option java_package = "org.wfanet.measurement.api.v2alpha";
option java_multiple_files = true;
option java_outer_classname = "DataProviderProto";

// A provider of event (e.g. impression) data. For example, a publisher or panel
// provider.
message DataProvider {
  option (google.api.resource) = {
    type: "halo.wfanet.org/DataProvider"
    pattern: "dataProviders/{data_provider}"
    singular: "dataProvider"
    plural: "dataProviders"
  };

  // Resource name.
  string name = 1;

  // The X.509 certificate belonging to this `DataProvider` in DER format which
  // can be used to verify `public_key`.
  bytes certificate_der = 2 [(google.api.field_behavior) = REQUIRED];

  // Resource name of the `Certificate` belonging to this `DataProvider` which
  // can be used to verify `public_key`.
  //
  // The `x509_der` field of this resource matches `certificate_der`.
  string certificate = 3 [
    (google.api.resource_reference).type = "halo.wfanet.org/Certificate",
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  // Serialized `EncryptionPublicKey` for this `DataProvider`, which can be
  // verified using `certificate`.
  //
  // The version of the `EncryptionPublicKey` message must match the API version
  // used to last update this resource.
  SignedMessage public_key = 4 [(google.api.field_behavior) = REQUIRED];

  // Display name of the data provider.
  string display_name = 5;

  // Resource names of every `Duchy` that must be included in all computations
  // involving this `DataProvider`.
  repeated string required_duchies = 6 [
    (google.api.resource_reference).type = "halo.wfanet.org/Duchy",
    (google.api.field_behavior) = UNORDERED_LIST
  ];

  // Interval for when data is guaranteed to be available for a `Requisition`.
  // If this field is specified, both `start_time` and `end_time` must be set.
  google.type.Interval data_availability_interval = 7;
}
